name: Build and Push Service

on:
  workflow_call:
    inputs:
      image-name:
        required: true
        type: string
      image-tag:
        required: false
        type: string
      path:
        required: true
        type: string
      context:
        required: true
        type: string

jobs:
  build-service:
    runs-on: ubuntu-latest

    steps:
      - name: Print Environment
        run: echo ${{ env }}

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set outputs
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"

      - name: Check outputs
        run: echo "Commit - ${{ steps.vars.outputs.sha_short }}"
      
      - name: Extract tag from branch
        shell: bash
        run: echo "branch=$( echo ${GITHUB_HEAD_REF} | sed 's/[^a-zA-Z0-9]/-/g')" >> "$GITHUB_OUTPUT"
        id: branch

      - name: Login to GitHub Packages
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Image with given Tag
        if: inputs.image-tag != ''
        uses: docker/build-push-action@v3
        with:
          context: ${{ inputs.context }}
          file: ${{ inputs.path }}/Dockerfile
          push: true
          tags: ghcr.io/kioku-project/${{ inputs.image-name }}:${{ inputs.image-tag }}
          labels: commit_sha_short=${{ steps.vars.outputs.sha_short }}
      
      - name: Build Image with Branch Tag
        if: inputs.image-tag == ''
        uses: docker/build-push-action@v3
        with:
          context: ${{ inputs.context }}
          file: ${{ inputs.path }}/Dockerfile
          push: true
          tags: ghcr.io/kioku-project/${{ inputs.image-name }}:${{ steps.branch.outputs.branch }}
          labels: commit_sha_short=${{ steps.vars.outputs.sha_short }}