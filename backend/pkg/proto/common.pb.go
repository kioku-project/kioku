// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.2
// source: pkg/proto/common.proto

package common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GroupType int32

const (
	GroupType_GT_INVALID GroupType = 0
	GroupType_REQUEST    GroupType = 1
	GroupType_OPEN       GroupType = 2
	GroupType_CLOSED     GroupType = 3
)

// Enum value maps for GroupType.
var (
	GroupType_name = map[int32]string{
		0: "GT_INVALID",
		1: "REQUEST",
		2: "OPEN",
		3: "CLOSED",
	}
	GroupType_value = map[string]int32{
		"GT_INVALID": 0,
		"REQUEST":    1,
		"OPEN":       2,
		"CLOSED":     3,
	}
)

func (x GroupType) Enum() *GroupType {
	p := new(GroupType)
	*p = x
	return p
}

func (x GroupType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GroupType) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_proto_common_proto_enumTypes[0].Descriptor()
}

func (GroupType) Type() protoreflect.EnumType {
	return &file_pkg_proto_common_proto_enumTypes[0]
}

func (x GroupType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GroupType.Descriptor instead.
func (GroupType) EnumDescriptor() ([]byte, []int) {
	return file_pkg_proto_common_proto_rawDescGZIP(), []int{0}
}

type GroupRole int32

const (
	GroupRole_EXTERNAL  GroupRole = 0
	GroupRole_REQUESTED GroupRole = 1
	GroupRole_INVITED   GroupRole = 2
	GroupRole_READ      GroupRole = 3
	GroupRole_WRITE     GroupRole = 4
	GroupRole_ADMIN     GroupRole = 5
)

// Enum value maps for GroupRole.
var (
	GroupRole_name = map[int32]string{
		0: "EXTERNAL",
		1: "REQUESTED",
		2: "INVITED",
		3: "READ",
		4: "WRITE",
		5: "ADMIN",
	}
	GroupRole_value = map[string]int32{
		"EXTERNAL":  0,
		"REQUESTED": 1,
		"INVITED":   2,
		"READ":      3,
		"WRITE":     4,
		"ADMIN":     5,
	}
)

func (x GroupRole) Enum() *GroupRole {
	p := new(GroupRole)
	*p = x
	return p
}

func (x GroupRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GroupRole) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_proto_common_proto_enumTypes[1].Descriptor()
}

func (GroupRole) Type() protoreflect.EnumType {
	return &file_pkg_proto_common_proto_enumTypes[1]
}

func (x GroupRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GroupRole.Descriptor instead.
func (GroupRole) EnumDescriptor() ([]byte, []int) {
	return file_pkg_proto_common_proto_rawDescGZIP(), []int{1}
}

type DeckType int32

const (
	DeckType_DT_INVALID DeckType = 0
	DeckType_PUBLIC     DeckType = 1
	DeckType_PRIVATE    DeckType = 2
)

// Enum value maps for DeckType.
var (
	DeckType_name = map[int32]string{
		0: "DT_INVALID",
		1: "PUBLIC",
		2: "PRIVATE",
	}
	DeckType_value = map[string]int32{
		"DT_INVALID": 0,
		"PUBLIC":     1,
		"PRIVATE":    2,
	}
)

func (x DeckType) Enum() *DeckType {
	p := new(DeckType)
	*p = x
	return p
}

func (x DeckType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeckType) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_proto_common_proto_enumTypes[2].Descriptor()
}

func (DeckType) Type() protoreflect.EnumType {
	return &file_pkg_proto_common_proto_enumTypes[2]
}

func (x DeckType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeckType.Descriptor instead.
func (DeckType) EnumDescriptor() ([]byte, []int) {
	return file_pkg_proto_common_proto_rawDescGZIP(), []int{2}
}

type Success struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *Success) Reset() {
	*x = Success{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Success) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Success) ProtoMessage() {}

func (x *Success) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Success.ProtoReflect.Descriptor instead.
func (*Success) Descriptor() ([]byte, []int) {
	return file_pkg_proto_common_proto_rawDescGZIP(), []int{0}
}

func (x *Success) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID       string    `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	UserEmail    string    `protobuf:"bytes,2,opt,name=userEmail,proto3" json:"userEmail,omitempty"`
	UserName     string    `protobuf:"bytes,3,opt,name=userName,proto3" json:"userName,omitempty"`
	UserPassword string    `protobuf:"bytes,4,opt,name=userPassword,proto3" json:"userPassword,omitempty"`
	GroupRole    GroupRole `protobuf:"varint,5,opt,name=groupRole,proto3,enum=common.GroupRole" json:"groupRole,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_pkg_proto_common_proto_rawDescGZIP(), []int{1}
}

func (x *User) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *User) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *User) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *User) GetUserPassword() string {
	if x != nil {
		return x.UserPassword
	}
	return ""
}

func (x *User) GetGroupRole() GroupRole {
	if x != nil {
		return x.GroupRole
	}
	return GroupRole_EXTERNAL
}

type Users struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*User `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *Users) Reset() {
	*x = Users{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Users) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Users) ProtoMessage() {}

func (x *Users) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Users.ProtoReflect.Descriptor instead.
func (*Users) Descriptor() ([]byte, []int) {
	return file_pkg_proto_common_proto_rawDescGZIP(), []int{2}
}

func (x *Users) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

type Group struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID          string    `protobuf:"bytes,1,opt,name=groupID,proto3" json:"groupID,omitempty"`
	GroupName        string    `protobuf:"bytes,2,opt,name=groupName,proto3" json:"groupName,omitempty"`
	GroupDescription string    `protobuf:"bytes,3,opt,name=groupDescription,proto3" json:"groupDescription,omitempty"`
	IsDefault        bool      `protobuf:"varint,4,opt,name=isDefault,proto3" json:"isDefault,omitempty"`
	GroupType        GroupType `protobuf:"varint,5,opt,name=groupType,proto3,enum=common.GroupType" json:"groupType,omitempty"`
	Role             GroupRole `protobuf:"varint,6,opt,name=role,proto3,enum=common.GroupRole" json:"role,omitempty"`
}

func (x *Group) Reset() {
	*x = Group{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_common_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Group) ProtoMessage() {}

func (x *Group) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_common_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Group.ProtoReflect.Descriptor instead.
func (*Group) Descriptor() ([]byte, []int) {
	return file_pkg_proto_common_proto_rawDescGZIP(), []int{3}
}

func (x *Group) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *Group) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *Group) GetGroupDescription() string {
	if x != nil {
		return x.GroupDescription
	}
	return ""
}

func (x *Group) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

func (x *Group) GetGroupType() GroupType {
	if x != nil {
		return x.GroupType
	}
	return GroupType_GT_INVALID
}

func (x *Group) GetRole() GroupRole {
	if x != nil {
		return x.Role
	}
	return GroupRole_EXTERNAL
}

type Groups struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Groups []*Group `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *Groups) Reset() {
	*x = Groups{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_common_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Groups) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Groups) ProtoMessage() {}

func (x *Groups) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_common_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Groups.ProtoReflect.Descriptor instead.
func (*Groups) Descriptor() ([]byte, []int) {
	return file_pkg_proto_common_proto_rawDescGZIP(), []int{4}
}

func (x *Groups) GetGroups() []*Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

type GroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Group  *Group `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *GroupRequest) Reset() {
	*x = GroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_common_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupRequest) ProtoMessage() {}

func (x *GroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_common_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupRequest.ProtoReflect.Descriptor instead.
func (*GroupRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_common_proto_rawDescGZIP(), []int{5}
}

func (x *GroupRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GroupRequest) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

type GroupMembers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*User `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *GroupMembers) Reset() {
	*x = GroupMembers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_common_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupMembers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupMembers) ProtoMessage() {}

func (x *GroupMembers) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_common_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupMembers.ProtoReflect.Descriptor instead.
func (*GroupMembers) Descriptor() ([]byte, []int) {
	return file_pkg_proto_common_proto_rawDescGZIP(), []int{6}
}

func (x *GroupMembers) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

type ManageGroupMemberRequestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID          string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	GroupID         string `protobuf:"bytes,2,opt,name=groupID,proto3" json:"groupID,omitempty"`
	RequestResponse bool   `protobuf:"varint,3,opt,name=requestResponse,proto3" json:"requestResponse,omitempty"`
}

func (x *ManageGroupMemberRequestRequest) Reset() {
	*x = ManageGroupMemberRequestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_common_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManageGroupMemberRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManageGroupMemberRequestRequest) ProtoMessage() {}

func (x *ManageGroupMemberRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_common_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManageGroupMemberRequestRequest.ProtoReflect.Descriptor instead.
func (*ManageGroupMemberRequestRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_common_proto_rawDescGZIP(), []int{7}
}

func (x *ManageGroupMemberRequestRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *ManageGroupMemberRequestRequest) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *ManageGroupMemberRequestRequest) GetRequestResponse() bool {
	if x != nil {
		return x.RequestResponse
	}
	return false
}

type GroupModUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID    string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Group     *Group `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	ModUserID string `protobuf:"bytes,3,opt,name=modUserID,proto3" json:"modUserID,omitempty"`
}

func (x *GroupModUserRequest) Reset() {
	*x = GroupModUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_common_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupModUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupModUserRequest) ProtoMessage() {}

func (x *GroupModUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_common_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupModUserRequest.ProtoReflect.Descriptor instead.
func (*GroupModUserRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_common_proto_rawDescGZIP(), []int{8}
}

func (x *GroupModUserRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GroupModUserRequest) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *GroupModUserRequest) GetModUserID() string {
	if x != nil {
		return x.ModUserID
	}
	return ""
}

type GroupInviteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID          string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Group           *Group `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	InviteUserEmail string `protobuf:"bytes,3,opt,name=inviteUserEmail,proto3" json:"inviteUserEmail,omitempty"`
}

func (x *GroupInviteRequest) Reset() {
	*x = GroupInviteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_common_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupInviteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupInviteRequest) ProtoMessage() {}

func (x *GroupInviteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_common_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupInviteRequest.ProtoReflect.Descriptor instead.
func (*GroupInviteRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_common_proto_rawDescGZIP(), []int{9}
}

func (x *GroupInviteRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GroupInviteRequest) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *GroupInviteRequest) GetInviteUserEmail() string {
	if x != nil {
		return x.InviteUserEmail
	}
	return ""
}

type Card struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardID string      `protobuf:"bytes,1,opt,name=cardID,proto3" json:"cardID,omitempty"`
	DeckID string      `protobuf:"bytes,2,opt,name=deckID,proto3" json:"deckID,omitempty"`
	Sides  []*CardSide `protobuf:"bytes,3,rep,name=sides,proto3" json:"sides,omitempty"`
}

func (x *Card) Reset() {
	*x = Card{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_common_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Card) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card) ProtoMessage() {}

func (x *Card) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_common_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card.ProtoReflect.Descriptor instead.
func (*Card) Descriptor() ([]byte, []int) {
	return file_pkg_proto_common_proto_rawDescGZIP(), []int{10}
}

func (x *Card) GetCardID() string {
	if x != nil {
		return x.CardID
	}
	return ""
}

func (x *Card) GetDeckID() string {
	if x != nil {
		return x.DeckID
	}
	return ""
}

func (x *Card) GetSides() []*CardSide {
	if x != nil {
		return x.Sides
	}
	return nil
}

type CardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Card   *Card  `protobuf:"bytes,2,opt,name=card,proto3" json:"card,omitempty"`
}

func (x *CardRequest) Reset() {
	*x = CardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_common_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardRequest) ProtoMessage() {}

func (x *CardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_common_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardRequest.ProtoReflect.Descriptor instead.
func (*CardRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_common_proto_rawDescGZIP(), []int{11}
}

func (x *CardRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *CardRequest) GetCard() *Card {
	if x != nil {
		return x.Card
	}
	return nil
}

type Cards struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cards []*Card `protobuf:"bytes,1,rep,name=cards,proto3" json:"cards,omitempty"`
}

func (x *Cards) Reset() {
	*x = Cards{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_common_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cards) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cards) ProtoMessage() {}

func (x *Cards) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_common_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cards.ProtoReflect.Descriptor instead.
func (*Cards) Descriptor() ([]byte, []int) {
	return file_pkg_proto_common_proto_rawDescGZIP(), []int{12}
}

func (x *Cards) GetCards() []*Card {
	if x != nil {
		return x.Cards
	}
	return nil
}

type CardSide struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardSideID  string `protobuf:"bytes,1,opt,name=cardSideID,proto3" json:"cardSideID,omitempty"`
	Header      string `protobuf:"bytes,2,opt,name=header,proto3" json:"header,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *CardSide) Reset() {
	*x = CardSide{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_common_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardSide) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardSide) ProtoMessage() {}

func (x *CardSide) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_common_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardSide.ProtoReflect.Descriptor instead.
func (*CardSide) Descriptor() ([]byte, []int) {
	return file_pkg_proto_common_proto_rawDescGZIP(), []int{13}
}

func (x *CardSide) GetCardSideID() string {
	if x != nil {
		return x.CardSideID
	}
	return ""
}

func (x *CardSide) GetHeader() string {
	if x != nil {
		return x.Header
	}
	return ""
}

func (x *CardSide) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type CardSideRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID                string    `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	CardID                string    `protobuf:"bytes,2,opt,name=cardID,proto3" json:"cardID,omitempty"`
	CardSide              *CardSide `protobuf:"bytes,3,opt,name=cardSide,proto3" json:"cardSide,omitempty"`
	PlaceBeforeCardSideID string    `protobuf:"bytes,4,opt,name=placeBeforeCardSideID,proto3" json:"placeBeforeCardSideID,omitempty"`
}

func (x *CardSideRequest) Reset() {
	*x = CardSideRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_common_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardSideRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardSideRequest) ProtoMessage() {}

func (x *CardSideRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_common_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardSideRequest.ProtoReflect.Descriptor instead.
func (*CardSideRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_common_proto_rawDescGZIP(), []int{14}
}

func (x *CardSideRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *CardSideRequest) GetCardID() string {
	if x != nil {
		return x.CardID
	}
	return ""
}

func (x *CardSideRequest) GetCardSide() *CardSide {
	if x != nil {
		return x.CardSide
	}
	return nil
}

func (x *CardSideRequest) GetPlaceBeforeCardSideID() string {
	if x != nil {
		return x.PlaceBeforeCardSideID
	}
	return ""
}

type Deck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeckID          string    `protobuf:"bytes,1,opt,name=deckID,proto3" json:"deckID,omitempty"`
	DeckName        string    `protobuf:"bytes,2,opt,name=deckName,proto3" json:"deckName,omitempty"`
	DeckDescription string    `protobuf:"bytes,3,opt,name=deckDescription,proto3" json:"deckDescription,omitempty"`
	DeckRole        GroupRole `protobuf:"varint,4,opt,name=deckRole,proto3,enum=common.GroupRole" json:"deckRole,omitempty"`
	DeckType        DeckType  `protobuf:"varint,5,opt,name=deckType,proto3,enum=common.DeckType" json:"deckType,omitempty"`
	CreatedAt       int64     `protobuf:"varint,6,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	GroupID         string    `protobuf:"bytes,7,opt,name=groupID,proto3" json:"groupID,omitempty"`
	IsActive        bool      `protobuf:"varint,8,opt,name=isActive,proto3" json:"isActive,omitempty"`
	IsFavorite      bool      `protobuf:"varint,9,opt,name=isFavorite,proto3" json:"isFavorite,omitempty"`
}

func (x *Deck) Reset() {
	*x = Deck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_common_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Deck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deck) ProtoMessage() {}

func (x *Deck) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_common_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deck.ProtoReflect.Descriptor instead.
func (*Deck) Descriptor() ([]byte, []int) {
	return file_pkg_proto_common_proto_rawDescGZIP(), []int{15}
}

func (x *Deck) GetDeckID() string {
	if x != nil {
		return x.DeckID
	}
	return ""
}

func (x *Deck) GetDeckName() string {
	if x != nil {
		return x.DeckName
	}
	return ""
}

func (x *Deck) GetDeckDescription() string {
	if x != nil {
		return x.DeckDescription
	}
	return ""
}

func (x *Deck) GetDeckRole() GroupRole {
	if x != nil {
		return x.DeckRole
	}
	return GroupRole_EXTERNAL
}

func (x *Deck) GetDeckType() DeckType {
	if x != nil {
		return x.DeckType
	}
	return DeckType_DT_INVALID
}

func (x *Deck) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Deck) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *Deck) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *Deck) GetIsFavorite() bool {
	if x != nil {
		return x.IsFavorite
	}
	return false
}

type DeckRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Deck   *Deck  `protobuf:"bytes,2,opt,name=deck,proto3" json:"deck,omitempty"`
}

func (x *DeckRequest) Reset() {
	*x = DeckRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_common_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeckRequest) ProtoMessage() {}

func (x *DeckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_common_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeckRequest.ProtoReflect.Descriptor instead.
func (*DeckRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_common_proto_rawDescGZIP(), []int{16}
}

func (x *DeckRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *DeckRequest) GetDeck() *Deck {
	if x != nil {
		return x.Deck
	}
	return nil
}

type Decks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Decks []*Deck `protobuf:"bytes,1,rep,name=decks,proto3" json:"decks,omitempty"`
}

func (x *Decks) Reset() {
	*x = Decks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_common_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Decks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Decks) ProtoMessage() {}

func (x *Decks) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_common_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Decks.ProtoReflect.Descriptor instead.
func (*Decks) Descriptor() ([]byte, []int) {
	return file_pkg_proto_common_proto_rawDescGZIP(), []int{17}
}

func (x *Decks) GetDecks() []*Deck {
	if x != nil {
		return x.Decks
	}
	return nil
}

type PushSubscriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID       string            `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Subscription *PushSubscription `protobuf:"bytes,2,opt,name=subscription,proto3" json:"subscription,omitempty"`
}

func (x *PushSubscriptionRequest) Reset() {
	*x = PushSubscriptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_common_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushSubscriptionRequest) ProtoMessage() {}

func (x *PushSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_common_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*PushSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_common_proto_rawDescGZIP(), []int{18}
}

func (x *PushSubscriptionRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *PushSubscriptionRequest) GetSubscription() *PushSubscription {
	if x != nil {
		return x.Subscription
	}
	return nil
}

type PushSubscription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptionID string `protobuf:"bytes,1,opt,name=subscriptionID,proto3" json:"subscriptionID,omitempty"`
	Endpoint       string `protobuf:"bytes,2,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Auth           string `protobuf:"bytes,3,opt,name=auth,proto3" json:"auth,omitempty"`
	P256Dh         string `protobuf:"bytes,4,opt,name=p256dh,proto3" json:"p256dh,omitempty"`
}

func (x *PushSubscription) Reset() {
	*x = PushSubscription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_common_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushSubscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushSubscription) ProtoMessage() {}

func (x *PushSubscription) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_common_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushSubscription.ProtoReflect.Descriptor instead.
func (*PushSubscription) Descriptor() ([]byte, []int) {
	return file_pkg_proto_common_proto_rawDescGZIP(), []int{19}
}

func (x *PushSubscription) GetSubscriptionID() string {
	if x != nil {
		return x.SubscriptionID
	}
	return ""
}

func (x *PushSubscription) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *PushSubscription) GetAuth() string {
	if x != nil {
		return x.Auth
	}
	return ""
}

func (x *PushSubscription) GetP256Dh() string {
	if x != nil {
		return x.P256Dh
	}
	return ""
}

type PushSubscriptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subscriptions []*PushSubscription `protobuf:"bytes,1,rep,name=subscriptions,proto3" json:"subscriptions,omitempty"`
}

func (x *PushSubscriptions) Reset() {
	*x = PushSubscriptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_common_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushSubscriptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushSubscriptions) ProtoMessage() {}

func (x *PushSubscriptions) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_common_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushSubscriptions.ProtoReflect.Descriptor instead.
func (*PushSubscriptions) Descriptor() ([]byte, []int) {
	return file_pkg_proto_common_proto_rawDescGZIP(), []int{20}
}

func (x *PushSubscriptions) GetSubscriptions() []*PushSubscription {
	if x != nil {
		return x.Subscriptions
	}
	return nil
}

var File_pkg_proto_common_proto protoreflect.FileDescriptor

var file_pkg_proto_common_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x22, 0x23, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0xad, 0x01, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x2f, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x6f, 0x6c,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x6f, 0x6c, 0x65, 0x22, 0x2b, 0x0a, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x22,
	0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x22, 0xe1, 0x01, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x18, 0x0a, 0x07,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x2f,
	0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x25, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x2f, 0x0a, 0x06, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x12, 0x25, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0x4b, 0x0a, 0x0c, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x23, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x22, 0x32, 0x0a, 0x0c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x12, 0x22, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0x7d, 0x0a, 0x1f, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x28, 0x0a,
	0x0f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x70, 0x0a, 0x13, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x6f, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x23, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x6d,
	0x6f, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6d, 0x6f, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x7b, 0x0a, 0x12, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x23, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x28, 0x0a, 0x0f,
	0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x5e, 0x0a, 0x04, 0x43, 0x61, 0x72, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x63, 0x61, 0x72, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x63, 0x61, 0x72, 0x64, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x63, 0x6b, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x63, 0x6b, 0x49, 0x44, 0x12, 0x26,
	0x0a, 0x05, 0x73, 0x69, 0x64, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x53, 0x69, 0x64, 0x65, 0x52,
	0x05, 0x73, 0x69, 0x64, 0x65, 0x73, 0x22, 0x47, 0x0a, 0x0b, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a,
	0x04, 0x63, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x04, 0x63, 0x61, 0x72, 0x64, 0x22,
	0x2b, 0x0a, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x22, 0x0a, 0x05, 0x63, 0x61, 0x72, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x05, 0x63, 0x61, 0x72, 0x64, 0x73, 0x22, 0x64, 0x0a, 0x08,
	0x43, 0x61, 0x72, 0x64, 0x53, 0x69, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x72, 0x64,
	0x53, 0x69, 0x64, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61,
	0x72, 0x64, 0x53, 0x69, 0x64, 0x65, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xa5, 0x01, 0x0a, 0x0f, 0x43, 0x61, 0x72, 0x64, 0x53, 0x69, 0x64, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x63, 0x61, 0x72, 0x64, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x63, 0x61, 0x72, 0x64, 0x49, 0x44, 0x12, 0x2c, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x64, 0x53, 0x69,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x53, 0x69, 0x64, 0x65, 0x52, 0x08, 0x63, 0x61, 0x72, 0x64,
	0x53, 0x69, 0x64, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x42, 0x65, 0x66,
	0x6f, 0x72, 0x65, 0x43, 0x61, 0x72, 0x64, 0x53, 0x69, 0x64, 0x65, 0x49, 0x44, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x15, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65,
	0x43, 0x61, 0x72, 0x64, 0x53, 0x69, 0x64, 0x65, 0x49, 0x44, 0x22, 0xb5, 0x02, 0x0a, 0x04, 0x44,
	0x65, 0x63, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x63, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x63, 0x6b, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x65, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x65, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x65, 0x63, 0x6b, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x64, 0x65, 0x63, 0x6b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2d, 0x0a, 0x08, 0x64, 0x65, 0x63, 0x6b, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x08, 0x64, 0x65, 0x63, 0x6b, 0x52, 0x6f, 0x6c, 0x65,
	0x12, 0x2c, 0x0a, 0x08, 0x64, 0x65, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x63, 0x6b,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x64, 0x65, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69,
	0x74, 0x65, 0x22, 0x47, 0x0a, 0x0b, 0x44, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x04, 0x64, 0x65, 0x63,
	0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x44, 0x65, 0x63, 0x6b, 0x52, 0x04, 0x64, 0x65, 0x63, 0x6b, 0x22, 0x2b, 0x0a, 0x05, 0x44,
	0x65, 0x63, 0x6b, 0x73, 0x12, 0x22, 0x0a, 0x05, 0x64, 0x65, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x63,
	0x6b, 0x52, 0x05, 0x64, 0x65, 0x63, 0x6b, 0x73, 0x22, 0x6f, 0x0a, 0x17, 0x50, 0x75, 0x73, 0x68,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x3c, 0x0a, 0x0c, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x82, 0x01, 0x0a, 0x10, 0x50, 0x75,
	0x73, 0x68, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26,
	0x0a, 0x0e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x32, 0x35, 0x36, 0x64, 0x68,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x32, 0x35, 0x36, 0x64, 0x68, 0x22, 0x53,
	0x0a, 0x11, 0x50, 0x75, 0x73, 0x68, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x3e, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2a, 0x3e, 0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0e, 0x0a, 0x0a, 0x47, 0x54, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x07, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x01, 0x12, 0x08, 0x0a,
	0x04, 0x4f, 0x50, 0x45, 0x4e, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x4c, 0x4f, 0x53, 0x45,
	0x44, 0x10, 0x03, 0x2a, 0x55, 0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x6f, 0x6c, 0x65,
	0x12, 0x0c, 0x0a, 0x08, 0x45, 0x58, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x0d,
	0x0a, 0x09, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a,
	0x07, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x52, 0x45,
	0x41, 0x44, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x57, 0x52, 0x49, 0x54, 0x45, 0x10, 0x04, 0x12,
	0x09, 0x0a, 0x05, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x10, 0x05, 0x2a, 0x33, 0x0a, 0x08, 0x44, 0x65,
	0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x54, 0x5f, 0x49, 0x4e, 0x56,
	0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x43,
	0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x52, 0x49, 0x56, 0x41, 0x54, 0x45, 0x10, 0x02, 0x42,
	0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x69,
	0x6f, 0x6b, 0x75, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x6b, 0x69, 0x6f, 0x6b,
	0x75, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_proto_common_proto_rawDescOnce sync.Once
	file_pkg_proto_common_proto_rawDescData = file_pkg_proto_common_proto_rawDesc
)

func file_pkg_proto_common_proto_rawDescGZIP() []byte {
	file_pkg_proto_common_proto_rawDescOnce.Do(func() {
		file_pkg_proto_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_proto_common_proto_rawDescData)
	})
	return file_pkg_proto_common_proto_rawDescData
}

var file_pkg_proto_common_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_pkg_proto_common_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_pkg_proto_common_proto_goTypes = []interface{}{
	(GroupType)(0),                          // 0: common.GroupType
	(GroupRole)(0),                          // 1: common.GroupRole
	(DeckType)(0),                           // 2: common.DeckType
	(*Success)(nil),                         // 3: common.Success
	(*User)(nil),                            // 4: common.User
	(*Users)(nil),                           // 5: common.Users
	(*Group)(nil),                           // 6: common.Group
	(*Groups)(nil),                          // 7: common.Groups
	(*GroupRequest)(nil),                    // 8: common.GroupRequest
	(*GroupMembers)(nil),                    // 9: common.GroupMembers
	(*ManageGroupMemberRequestRequest)(nil), // 10: common.ManageGroupMemberRequestRequest
	(*GroupModUserRequest)(nil),             // 11: common.GroupModUserRequest
	(*GroupInviteRequest)(nil),              // 12: common.GroupInviteRequest
	(*Card)(nil),                            // 13: common.Card
	(*CardRequest)(nil),                     // 14: common.CardRequest
	(*Cards)(nil),                           // 15: common.Cards
	(*CardSide)(nil),                        // 16: common.CardSide
	(*CardSideRequest)(nil),                 // 17: common.CardSideRequest
	(*Deck)(nil),                            // 18: common.Deck
	(*DeckRequest)(nil),                     // 19: common.DeckRequest
	(*Decks)(nil),                           // 20: common.Decks
	(*PushSubscriptionRequest)(nil),         // 21: common.PushSubscriptionRequest
	(*PushSubscription)(nil),                // 22: common.PushSubscription
	(*PushSubscriptions)(nil),               // 23: common.PushSubscriptions
}
var file_pkg_proto_common_proto_depIdxs = []int32{
	1,  // 0: common.User.groupRole:type_name -> common.GroupRole
	4,  // 1: common.Users.users:type_name -> common.User
	0,  // 2: common.Group.groupType:type_name -> common.GroupType
	1,  // 3: common.Group.role:type_name -> common.GroupRole
	6,  // 4: common.Groups.groups:type_name -> common.Group
	6,  // 5: common.GroupRequest.group:type_name -> common.Group
	4,  // 6: common.GroupMembers.users:type_name -> common.User
	6,  // 7: common.GroupModUserRequest.group:type_name -> common.Group
	6,  // 8: common.GroupInviteRequest.group:type_name -> common.Group
	16, // 9: common.Card.sides:type_name -> common.CardSide
	13, // 10: common.CardRequest.card:type_name -> common.Card
	13, // 11: common.Cards.cards:type_name -> common.Card
	16, // 12: common.CardSideRequest.cardSide:type_name -> common.CardSide
	1,  // 13: common.Deck.deckRole:type_name -> common.GroupRole
	2,  // 14: common.Deck.deckType:type_name -> common.DeckType
	18, // 15: common.DeckRequest.deck:type_name -> common.Deck
	18, // 16: common.Decks.decks:type_name -> common.Deck
	22, // 17: common.PushSubscriptionRequest.subscription:type_name -> common.PushSubscription
	22, // 18: common.PushSubscriptions.subscriptions:type_name -> common.PushSubscription
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_pkg_proto_common_proto_init() }
func file_pkg_proto_common_proto_init() {
	if File_pkg_proto_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_proto_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Success); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_common_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Users); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_common_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Group); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_common_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Groups); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_common_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_common_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupMembers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_common_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManageGroupMemberRequestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_common_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupModUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_common_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupInviteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_common_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Card); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_common_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_common_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cards); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_common_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardSide); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_common_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardSideRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_common_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Deck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_common_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeckRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_common_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Decks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_common_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushSubscriptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_common_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushSubscription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_common_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushSubscriptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_proto_common_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_proto_common_proto_goTypes,
		DependencyIndexes: file_pkg_proto_common_proto_depIdxs,
		EnumInfos:         file_pkg_proto_common_proto_enumTypes,
		MessageInfos:      file_pkg_proto_common_proto_msgTypes,
	}.Build()
	File_pkg_proto_common_proto = out.File
	file_pkg_proto_common_proto_rawDesc = nil
	file_pkg_proto_common_proto_goTypes = nil
	file_pkg_proto_common_proto_depIdxs = nil
}
