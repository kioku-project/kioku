// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.0
// source: services/carddeck/proto/carddeck.proto

package cardDeck

import (
	proto "github.com/kioku-project/kioku/pkg/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CopyDeckRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID        string      `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Deck          *proto.Deck `protobuf:"bytes,2,opt,name=deck,proto3" json:"deck,omitempty"`
	NewDeck       *proto.Deck `protobuf:"bytes,3,opt,name=newDeck,proto3" json:"newDeck,omitempty"`
	TargetGroupID string      `protobuf:"bytes,4,opt,name=targetGroupID,proto3" json:"targetGroupID,omitempty"`
}

func (x *CopyDeckRequest) Reset() {
	*x = CopyDeckRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_carddeck_proto_carddeck_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CopyDeckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyDeckRequest) ProtoMessage() {}

func (x *CopyDeckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_carddeck_proto_carddeck_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyDeckRequest.ProtoReflect.Descriptor instead.
func (*CopyDeckRequest) Descriptor() ([]byte, []int) {
	return file_services_carddeck_proto_carddeck_proto_rawDescGZIP(), []int{0}
}

func (x *CopyDeckRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *CopyDeckRequest) GetDeck() *proto.Deck {
	if x != nil {
		return x.Deck
	}
	return nil
}

func (x *CopyDeckRequest) GetNewDeck() *proto.Deck {
	if x != nil {
		return x.NewDeck
	}
	return nil
}

func (x *CopyDeckRequest) GetTargetGroupID() string {
	if x != nil {
		return x.TargetGroupID
	}
	return ""
}

var File_services_carddeck_proto_carddeck_proto protoreflect.FileDescriptor

var file_services_carddeck_proto_carddeck_proto_rawDesc = []byte{
	0x0a, 0x26, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x63, 0x61, 0x72, 0x64, 0x64,
	0x65, 0x63, 0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x61, 0x72, 0x64, 0x64, 0x65,
	0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x63, 0x61, 0x72, 0x64, 0x44, 0x65,
	0x63, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x16, 0x70, 0x6b, 0x67, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x99, 0x01, 0x0a, 0x0f, 0x43, 0x6f, 0x70, 0x79, 0x44, 0x65, 0x63, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a,
	0x04, 0x64, 0x65, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x63, 0x6b, 0x52, 0x04, 0x64, 0x65, 0x63, 0x6b, 0x12,
	0x26, 0x0a, 0x07, 0x6e, 0x65, 0x77, 0x44, 0x65, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x63, 0x6b, 0x52, 0x07,
	0x6e, 0x65, 0x77, 0x44, 0x65, 0x63, 0x6b, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x32, 0x8f, 0x06,
	0x0a, 0x08, 0x43, 0x61, 0x72, 0x64, 0x44, 0x65, 0x63, 0x6b, 0x12, 0x36, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x63, 0x6b, 0x73, 0x12, 0x14, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x63, 0x6b, 0x73,
	0x22, 0x00, 0x12, 0x31, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x63, 0x6b,
	0x12, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x63, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44,
	0x65, 0x63, 0x6b, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x08, 0x43, 0x6f, 0x70, 0x79, 0x44, 0x65, 0x63,
	0x6b, 0x12, 0x20, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x44, 0x65, 0x63, 0x6b, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x70, 0x79, 0x44, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x63,
	0x6b, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x44, 0x65, 0x63, 0x6b, 0x12, 0x13,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x63,
	0x6b, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x0a, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x44, 0x65, 0x63,
	0x6b, 0x12, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x63, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x0a, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x44, 0x65, 0x63, 0x6b, 0x12, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x44, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x00, 0x12,
	0x34, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x44, 0x65, 0x63, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12,
	0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x61,
	0x72, 0x64, 0x73, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x61, 0x72, 0x64, 0x12, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x43,
	0x61, 0x72, 0x64, 0x12, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x0a, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x79, 0x43, 0x61, 0x72, 0x64, 0x12, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x00, 0x12, 0x34,
	0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x72, 0x64, 0x12, 0x13, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61,
	0x72, 0x64, 0x53, 0x69, 0x64, 0x65, 0x12, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x43, 0x61, 0x72, 0x64, 0x53, 0x69, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x53, 0x69, 0x64,
	0x65, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x0e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x43, 0x61, 0x72,
	0x64, 0x53, 0x69, 0x64, 0x65, 0x12, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43,
	0x61, 0x72, 0x64, 0x53, 0x69, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22,
	0x00, 0x12, 0x3c, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x72, 0x64, 0x53,
	0x69, 0x64, 0x65, 0x12, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x61, 0x72,
	0x64, 0x53, 0x69, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x00, 0x42,
	0x41, 0x5a, 0x3f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x69,
	0x6f, 0x6b, 0x75, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x6b, 0x69, 0x6f, 0x6b,
	0x75, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x63, 0x61, 0x72, 0x64, 0x64,
	0x65, 0x63, 0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x63, 0x61, 0x72, 0x64, 0x44, 0x65,
	0x63, 0x6b, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_services_carddeck_proto_carddeck_proto_rawDescOnce sync.Once
	file_services_carddeck_proto_carddeck_proto_rawDescData = file_services_carddeck_proto_carddeck_proto_rawDesc
)

func file_services_carddeck_proto_carddeck_proto_rawDescGZIP() []byte {
	file_services_carddeck_proto_carddeck_proto_rawDescOnce.Do(func() {
		file_services_carddeck_proto_carddeck_proto_rawDescData = protoimpl.X.CompressGZIP(file_services_carddeck_proto_carddeck_proto_rawDescData)
	})
	return file_services_carddeck_proto_carddeck_proto_rawDescData
}

var file_services_carddeck_proto_carddeck_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_services_carddeck_proto_carddeck_proto_goTypes = []interface{}{
	(*CopyDeckRequest)(nil),       // 0: cardDeckService.CopyDeckRequest
	(*proto.Deck)(nil),            // 1: common.Deck
	(*proto.GroupRequest)(nil),    // 2: common.GroupRequest
	(*proto.DeckRequest)(nil),     // 3: common.DeckRequest
	(*proto.CardRequest)(nil),     // 4: common.CardRequest
	(*proto.CardSideRequest)(nil), // 5: common.CardSideRequest
	(*proto.Decks)(nil),           // 6: common.Decks
	(*proto.Success)(nil),         // 7: common.Success
	(*proto.Cards)(nil),           // 8: common.Cards
	(*proto.Card)(nil),            // 9: common.Card
	(*proto.CardSide)(nil),        // 10: common.CardSide
}
var file_services_carddeck_proto_carddeck_proto_depIdxs = []int32{
	1,  // 0: cardDeckService.CopyDeckRequest.deck:type_name -> common.Deck
	1,  // 1: cardDeckService.CopyDeckRequest.newDeck:type_name -> common.Deck
	2,  // 2: cardDeckService.CardDeck.GetGroupDecks:input_type -> common.GroupRequest
	3,  // 3: cardDeckService.CardDeck.CreateDeck:input_type -> common.DeckRequest
	0,  // 4: cardDeckService.CardDeck.CopyDeck:input_type -> cardDeckService.CopyDeckRequest
	3,  // 5: cardDeckService.CardDeck.GetDeck:input_type -> common.DeckRequest
	3,  // 6: cardDeckService.CardDeck.ModifyDeck:input_type -> common.DeckRequest
	3,  // 7: cardDeckService.CardDeck.DeleteDeck:input_type -> common.DeckRequest
	3,  // 8: cardDeckService.CardDeck.GetDeckCards:input_type -> common.DeckRequest
	4,  // 9: cardDeckService.CardDeck.CreateCard:input_type -> common.CardRequest
	4,  // 10: cardDeckService.CardDeck.GetCard:input_type -> common.CardRequest
	4,  // 11: cardDeckService.CardDeck.ModifyCard:input_type -> common.CardRequest
	4,  // 12: cardDeckService.CardDeck.DeleteCard:input_type -> common.CardRequest
	5,  // 13: cardDeckService.CardDeck.CreateCardSide:input_type -> common.CardSideRequest
	5,  // 14: cardDeckService.CardDeck.ModifyCardSide:input_type -> common.CardSideRequest
	5,  // 15: cardDeckService.CardDeck.DeleteCardSide:input_type -> common.CardSideRequest
	6,  // 16: cardDeckService.CardDeck.GetGroupDecks:output_type -> common.Decks
	1,  // 17: cardDeckService.CardDeck.CreateDeck:output_type -> common.Deck
	1,  // 18: cardDeckService.CardDeck.CopyDeck:output_type -> common.Deck
	1,  // 19: cardDeckService.CardDeck.GetDeck:output_type -> common.Deck
	7,  // 20: cardDeckService.CardDeck.ModifyDeck:output_type -> common.Success
	7,  // 21: cardDeckService.CardDeck.DeleteDeck:output_type -> common.Success
	8,  // 22: cardDeckService.CardDeck.GetDeckCards:output_type -> common.Cards
	9,  // 23: cardDeckService.CardDeck.CreateCard:output_type -> common.Card
	9,  // 24: cardDeckService.CardDeck.GetCard:output_type -> common.Card
	7,  // 25: cardDeckService.CardDeck.ModifyCard:output_type -> common.Success
	7,  // 26: cardDeckService.CardDeck.DeleteCard:output_type -> common.Success
	10, // 27: cardDeckService.CardDeck.CreateCardSide:output_type -> common.CardSide
	7,  // 28: cardDeckService.CardDeck.ModifyCardSide:output_type -> common.Success
	7,  // 29: cardDeckService.CardDeck.DeleteCardSide:output_type -> common.Success
	16, // [16:30] is the sub-list for method output_type
	2,  // [2:16] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_services_carddeck_proto_carddeck_proto_init() }
func file_services_carddeck_proto_carddeck_proto_init() {
	if File_services_carddeck_proto_carddeck_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_services_carddeck_proto_carddeck_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CopyDeckRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_services_carddeck_proto_carddeck_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_services_carddeck_proto_carddeck_proto_goTypes,
		DependencyIndexes: file_services_carddeck_proto_carddeck_proto_depIdxs,
		MessageInfos:      file_services_carddeck_proto_carddeck_proto_msgTypes,
	}.Build()
	File_services_carddeck_proto_carddeck_proto = out.File
	file_services_carddeck_proto_carddeck_proto_rawDesc = nil
	file_services_carddeck_proto_carddeck_proto_goTypes = nil
	file_services_carddeck_proto_carddeck_proto_depIdxs = nil
}
