version: "3"

services:
  db:
    image: postgres
    restart: always
    env_file:
      - ./backend/.env

  frontend_proxy:
    container_name: kioku-frontend_proxy
    restart: always
    build:
      context: backend
      dockerfile: services/frontend/Dockerfile
    env_file:
      - ./backend/.env
    depends_on:
      - db

  user_service:
    container_name: kioku-user_service
    restart: always
    build:
      context: backend
      dockerfile: services/user/Dockerfile
      target: builder
    develop:
      watch:
        - path: backend/pkg
          action: rebuild
        - path: backend/store
          action: rebuild
        - path: backend/services/user
          action: rebuild
        - path: backend/services/carddeck/proto
          action: rebuild
        - path: backend/services/collaboration/proto
          action: rebuild
        - path: backend/services/srs/proto
          action: rebuild
    command: /go/src/kioku/services/user/user
    env_file:
      - ./backend/.env
    depends_on:
      - db

  carddeck_service:
    container_name: kioku-carddeck_service
    restart: always
    build:
      context: backend
      dockerfile: services/carddeck/Dockerfile
      target: builder
    develop:
      watch:
        - path: backend/pkg
          action: rebuild
        - path: backend/store
          action: rebuild
        - path: backend/services/carddeck
          action: rebuild
        - path: backend/services/collaboration/proto
          action: rebuild
        - path: backend/services/srs/proto
          action: rebuild
        - path: backend/services/user/proto
          action: rebuild
    command: /go/src/kioku/services/carddeck/carddeck
    env_file:
      - ./backend/.env
    depends_on:
      - db

  collaboration_service:
    container_name: kioku-collaboration_service
    restart: always
    build:
      context: backend
      dockerfile: services/collaboration/Dockerfile
      target: builder
    develop:
      watch:
        - path: backend/pkg
          action: rebuild
        - path: backend/store
          action: rebuild
        - path: backend/services/collaboration
          action: rebuild
        - path: backend/services/carddeck/proto
          action: rebuild
        - path: backend/services/user/proto
          action: rebuild
        - path: backend/services/srs/proto
          action: rebuild
    command: /go/src/kioku/services/collaboration/collaboration
    env_file:
      - ./backend/.env
    depends_on:
      - db

  srs_service:
    container_name: kioku-srs_service
    restart: always
    build:
      context: backend
      dockerfile: services/srs/Dockerfile
      target: builder
    develop:
      watch:
        - path: backend/pkg
          action: rebuild
        - path: backend/store
          action: rebuild
        - path: backend/services/srs
          action: rebuild
        - path: backend/services/carddeck/proto
          action: rebuild
        - path: backend/services/user/proto
          action: rebuild
        - path: backend/services/collaboration/proto
          action: rebuild
    command: /go/src/kioku/services/srs/srs
    env_file:
      - ./backend/.env
    depends_on:
      - db

  notification_service:
    container_name: kioku-notification_service
    restart: always
    build:
      context: backend
      dockerfile: services/notification/Dockerfile
      target: builder
    develop:
      watch:
        - path: backend/pkg
          action: rebuild
        - path: backend/store
          action: rebuild
        - path: backend/services/notification
          action: rebuild
        - path: backend/services/carddeck/proto
          action: rebuild
        - path: backend/services/user/proto
          action: rebuild
        - path: backend/services/collaboration/proto
          action: rebuild
    command: /go/src/kioku/services/notification/notification
    env_file:
      - ./backend/.env
    depends_on:
      - db

  frontend:
    container_name: kioku-frontend
    restart: always
    build:
      context: frontend
      target: builder
    command: npm run dev
    develop:
      watch:
        - path: frontend/package.json
          action: rebuild
        - path: "frontend/locales/"
          target: app/locales/
          action: sync+restart
        - path: "frontend/"
          target: app/
          action: sync
          ignore:
            - node_modules/
    ports:
      - "127.0.0.1:3000:3000"
    env_file:
      - ./backend/.env

  go-micro-dashboard:
    image: xpunch/go-micro-dashboard:latest
    container_name: kioku-micro-dashboard
    ports:
      - "127.0.0.1:3001:8082"
    env_file:
      - ./backend/.env

  pgadmin:
    image: dpage/pgadmin4
    container_name: kioku-pgadmin
    restart: always
    ports:
      - "127.0.0.1:3002:80"
    env_file:
      - ./backend/.env
    volumes:
      - pgadmin-data:/var/lib/pgadmin

volumes:
  pgadmin-data:
